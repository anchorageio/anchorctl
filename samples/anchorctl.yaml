apiVersion: batch/v1
kind: Job
metadata:
  labels:
    run: anchorctl
  name: anchorctl
  namespace: applications
spec:
  template:
    metadata:
      labels:
        run: anchorctl
    spec:
      containers:
      - image: docker.pkg.github.com/trussio/anchorctl/anchorctl:0.1.0
        name: anchorctl
        resources: {}
        volumeMounts:
          - name: config-vol
            mountPath: /config
      volumes:
        - name: config-vol
          configMap:
            name: sample-test
            items:
              - key: incluster-test.yaml
                path: test.yaml
              - key: deploy.yaml
                path: deploy.yaml
              - key: loadbalancer.yaml
                path: loadbalancer.yaml
      restartPolicy: OnFailure
---
apiVersion: v1
data:
  deploy.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        run: nginx-labels
      name: nginx-labels
      namespace: applications
    spec:
      replicas: 1
      selector:
        matchLabels:
          run: nginx-labels
      template:
        metadata:
          labels:
            run: nginx-labels
        spec:
          containers:
            - image: nginx
              name: nginx-labels
              resources: {}
  incluster-test.yaml: |
    kind: Pod
    metadata:
      #  name: nginx-7db9fccd9b-jlpw4
      namespace: default
      label:
        key: run
        value: nginx

    tests:
      - type: AssertJSONPath
        jsonPath: ".spec.nodeName"
        value: "docker-desktop"
      - type: AssertValidation
        action: "CREATE"      # Allowed actions: CREATE, UPDATE, DELETE
        filePath: "/config/loadbalancer.yaml"
        expectedError: "Internal error occurred: admission webhook \"webhook.openpolicyagent.org\" denied the request: External Loadbalancers cannot be deployed in this cluster"
      - type: AssertMutation
        action: "CREATE"      # Allowed actions: CREATE, UPDATE
        filePath: "/config/deploy.yaml"
        jsonPath: ".metadata.labels.function"
        value: "workload"
  loadbalancer.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      name: hello-world
      namespace: applications
      labels:
        app: hello-world
    spec:
      ports:
      - name: 8765-8765
        port: 8765
        protocol: TCP
        targetPort: 8765
      selector:
        app: hello-world
      type: LoadBalancer
    status:
      loadBalancer: {}
kind: ConfigMap
metadata:
  name: sample-test
  namespace: applications
